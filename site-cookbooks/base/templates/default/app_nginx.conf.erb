<% if @redirect_to_https %>
server {
    listen <%= node['nginx']['port'] || '80' %>;
    server_name <%= @domain_names.join(' ') %>;
    return 301 https://$host$request_uri;
}
<% else %>
server {
  listen <%= node['nginx']['port'] || '80' %>;
  server_name <%= @domain_names.join(' ') %>;
  root <%= @applications_root %>/<%= @name %>/current/public;

  <%= @nginx_extras.join("\n") %>

  try_files $uri/index.html $uri.html $uri @app;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location @app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://<%= @name %>_app;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @applications_root %>/<%= @name %>/current/public;
    internal;
  }

  client_max_body_size 4G;
  keepalive_timeout 10;
}
<% end %>

<% if @enable_ssl %>

server {
  listen 443 ssl;

  ssl_certificate <%= @applications_root %>/<%= @name %>/shared/config/certificate.crt;
  ssl_certificate_key <%= @applications_root %>/<%= @name %>/shared/config/certificate.key;
  <%= @ssl_extras.join("\n") %>


  server_name <%= @domain_names.join(' ') %>;

  root <%= @applications_root %>/<%= @name %>/current/public;

  <%= @nginx_extras.join("\n") %>

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location / {
    try_files $uri @app;
  }

  location @app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;

    proxy_pass http://<%= @name %>_app;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @applications_root %>/<%= @name %>/current/public;
    internal;
  }

  client_max_body_size 4G;
  keepalive_timeout 10;
}

<% end %>

upstream <%= @name %>_app {
  server unix:<%= @applications_root %>/<%= @name %>/shared/sockets/puma.sock;
}
